name: Publish GitHub Pages
on:
  push:
    branches:
      - main

jobs:
#  read_yaml:
#    runs-on: ubuntu-latest
#    name: Read slide configuration
#    steps:
#      - uses: actions/@checkout@v3
  # use this: https://github.com/marketplace/actions/yq-portable-yaml-processor

#  slides:
#    # This should definitely be abstracted, but for now just going
#    # to hardcode each slide directory
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        slideshow:
#          - 2023-04-13_lab-meeting
#    steps:
#      - uses: actions/checkout@v3
#      - uses: ./.github/actions/spectacle
#        with:
#          path: ${{ matrix.slideshow }}

  slides:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarnv1-${{ hashFiles('./src/2023-04-13_lab-meeting/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarnv1-
      - name: Install Yarn Dependencies
        run: yarn install --frozen-lockfile
        working-directory: src/2023-04-13_lab-meeting
      - name: Slides cache
        uses: actions/cache@v3
        id: slides-cache
        with:
          path: src/2023-04-13_lab-meeting/dist
          key: ${{ runner.os }}-slidesv1-${{ hashFiles('./src/2023-04-13_lab-meeting/src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-slidesv1-
      - name: Build Slides
        if: ${{ steps.slides-cache.outputs.cache-hit != 'true' }}
        run: npm run build
        working-directory: src/2023-04-13_lab-meeting
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: slides-artifact-1
          path: src/2023-04-13_lab-meeting/dist/

  slides2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarnv1-${{ hashFiles('./src/2023-05-11_lab-meeting/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarnv1-
      - name: Install Yarn Dependencies
        run: yarn install --frozen-lockfile
        working-directory: src/2023-05-11_lab-meeting
      - name: Slides cache
        uses: actions/cache@v3
        id: slides-cache
        with:
          path: src/2023-05-11_lab-meeting/dist
          key: ${{ runner.os }}-slidesv2-${{ hashFiles('./src/2023-05-11_lab-meeting/src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-slidesv2-
      - name: Build Slides
        if: ${{ steps.slides-cache.outputs.cache-hit != 'true' }}
        run: npm run build
        working-directory: src/2023-05-11_lab-meeting
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: slides-artifact-2
          path: src/2023-05-11_lab-meeting/dist/

  slides3:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Install dependencies
      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        working-directory: src/2023-08-02_earthseed/
        run: |
          pip install .

      - name: Slides cache
        uses: actions/cache@v3
        id: slides-cache-3
        with:
          path: src/2023-08-02_earthseed/dist
          key: ${{ runner.os }}-slidesv3-${{ hashFiles('./src/2023-08-02_earthseed/src/**/*') }}
          restore-keys: |
            ${{ runner.os }}-slidesv3-

      - name: Build the book
        if: ${{ steps.slides-cache-3.outputs.cache-hit != 'true' }}
        working-directory: src/2023-08-02_earthseed/
        run: |
          jupyter-book build slides/ --path-output dist/

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: slides-artifact-3
          path: src/2023-08-02_earthseed/dist/_build/html




  jekyll:
    runs-on: ubuntu-latest
    needs:
      - slides
      - slides2
      - slides3

    steps:
      - uses: actions/checkout@v3
      - name: Jekyll Cache
        uses: actions/cache@v3
        with:
          path: ./vendor/bundle
          key: ${{ runner.os }}-gemsv1-${{ hashFiles('**/Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gemsv1-
      - name: Download Slides Artifact
        uses: actions/download-artifact@v3
        with:
          name: slides-artifact-1
          path: site/2023-04-13_lab-meeting/

      # - name: Download Slides Artifact 2
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: slides-artifact-2
      #     path: site/2023-05-11_lab-meeting/

      - name: Download Slides Artifact 3
        uses: actions/download-artifact@v3
        with:
          name: slides-artifact-3
          path: dist/earthseed/

      - name: Download Slides Artifact 3 again bc jekyll is ridiculous
        uses: actions/download-artifact@v3
        with:
          name: slides-artifact-3
          path: site/earthseed/
          # Use GitHub Actions' cache to shorten build times and decrease load on servers
      - uses: helaili/jekyll-action@2.4.0    # Choose any one of the Jekyll Actions
        with:                                # Some relative inputs of your action
          token: ${{ secrets.GITHUB_TOKEN }}
          jekyll_src: "site"
          build_dir: "dist"
          target_branch: 'gh-pages'
